name: Day5 Compliance Pipeline

on:
  push:
    paths:
      - 'Security_Compliance_workshop-yourname/day5/**'
  pull_request:
    paths:
      - 'Security_Compliance_workshop-yourname/day5/**'

jobs:
  devsecops:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Security_Compliance_workshop-yourname/day5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install bandit semgrep checkov gitleaks

      - name: Create reports folder
        run: mkdir -p reports

      # SAST – Bandit
      - name: Bandit Scan
        run: bandit -r app/ -f html -o reports/bandit-report.html --exit-zero

      # SAST – Semgrep
      - name: Semgrep Scan
        run: semgrep --config auto --output reports/semgrep-report.json || true

      # Dependency Scan – Trivy (Python)
      - name: Trivy Python Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'json'
          output: 'reports/trivy-deps-report.json'
          ignore-unfixed: true

      # IaC Security – Checkov
      - name: Checkov Scan
        run: checkov -d infrastructure/ -o json > reports/checkov-report.json || true

      # Docker Image Scan – Trivy
      - name: Build Docker Image
        run: docker build -t flask-app:latest . || true

      - name: Trivy Docker Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          image-ref: 'flask-app:latest'
          format: 'json'
          output: 'reports/trivy-docker-report.json'
          ignore-unfixed: true

      # Secrets / PII – Gitleaks
      - name: Gitleaks Scan
        run: gitleaks detect -s . -o reports/gitleaks-report.json || true

      # Start Flask app for DAST – ZAP
      - name: Start Flask App
        run: |
          nohup python3 app/app.py &
          sleep 10

      - name: OWASP ZAP Scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:5000'
          cmd_options: '-t http://localhost:5000 -r reports/zap-report.html'

      # Upload all reports
      - name: Upload scan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: day5-scan-reports
          path: reports/*
